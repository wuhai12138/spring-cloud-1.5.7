<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.sfy.properties</groupId>
  <artifactId>jpx-config-server</artifactId>
  <packaging>jar</packaging>
  <version>1.0</version>
  <name>jpx-config-server</name>
  <description>${project.name}-${project.parent.version}</description>

  <properties>
    <log4j2.root.name>${project.name}</log4j2.root.name>
  </properties>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.4.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>

  <!-- 导入Spring Cloud的依赖管理 -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Dalston.SR3</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-starter-eureka-server</artifactId>
        <exclusions>
          <exclusion>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-config-server</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- 使用bus总线的方式通知所有的微服务配置文件需要刷新 -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-bus-amqp</artifactId>
    </dependency>
  </dependencies>

  <!--<build>-->
    <!--<finalName>${project.artifactId}</finalName>-->
    <!--<plugins>-->
      <!--&lt;!&ndash; 资源文件拷贝插件 &ndash;&gt;-->
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-resources-plugin</artifactId>-->
        <!--<configuration>-->
          <!--<encoding>UTF-8</encoding>-->
        <!--</configuration>-->
      <!--</plugin>-->
      <!--&lt;!&ndash; java编译插件 &ndash;&gt;-->
      <!--<plugin>-->
        <!--<groupId>org.apache.maven.plugins</groupId>-->
        <!--<artifactId>maven-compiler-plugin</artifactId>-->
        <!--<configuration>-->
          <!--<source>1.8</source>-->
          <!--<target>1.8</target>-->
          <!--<encoding>UTF-8</encoding>-->
        <!--</configuration>-->
      <!--</plugin>-->
    <!--</plugins>-->
  <!--</build>-->

  <build>
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources.${build.profile.id}</directory>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>


      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.0.0</version>

        <!--将插件绑定在某个phase执行-->
        <executions>
          <execution>
            <id>build-image</id>
            <!--将插件绑定在package这个phase上。也就是说，用户只需执行mvn package ，就会自动执行mvn docker:build-->
            <phase>package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>

        <configuration>
          <forceTags>true</forceTags>
          <!--指定生成的镜像名-->
          <imageName>sfy/${project.artifactId}</imageName>
          <!--指定标签-->
          <imageTags>
            <imageTag>latest</imageTag>
          </imageTags>
          <!-- 指定 Dockerfile 路径  ${project.basedir}：项目根路径下-->
          <dockerDirectory>${project.basedir}</dockerDirectory>
          <!--指定远程 docker api地址-->
          <dockerHost>http://192.168.1.23:2375</dockerHost>
          <!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
          <resources>
            <resource>
              <targetPath>/</targetPath>
              <!--jar 包所在的路径  此处配置的 即对应 target 目录-->
              <directory>${project.build.directory}</directory>
              <!-- 需要包含的 jar包 ，这里对应的是 Dockerfile中添加的文件名　-->
              <include>${project.build.finalName}.jar</include>
            </resource>
          </resources>

          <!-- 以下两行是为了docker push到DockerHub使用的。 -->
          <serverId>-dockerhub</serverId>
          <registryUrl>https://index.docker.io/v1</registryUrl>
        </configuration>
      </plugin>
    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
        </plugin>
        <!--spring-boot为了保护application.yml和application.properties，修改了默认的占位符${...}为@...@-->
        <!--为了spring boot的yml和properties文件能够使用maven变量替换,使用${}占位符-->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <configuration>
            <encoding>utf-8</encoding>
            <useDefaultDelimiters>true</useDefaultDelimiters>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.3</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
