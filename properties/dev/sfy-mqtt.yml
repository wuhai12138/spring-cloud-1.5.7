profile: 123
eureka-server: http://192.168.1.35:7777
spring-datasource-username: root
spring-datasource-password: sfydev123
spring-datasource-url: jdbc:mysql://192.168.1.33:3306/sfy-config?useUnicode=true&characterEncoding=utf-8&useSSL=false
spring-redis-host: 192.168.1.33 #Redis服务器地址
spring-redis-port: 6379 #Redis服务器连接端口
spring-redis-password: sfydev123 #Redis服务器连接密码（默认为空）
spring-redis-timeout: 10000 #连接超时时间（毫秒）
hystrix-timeoutInMilliseconds: 3000
security-server: http://192.168.1.36:5010
security-name: admin
security-password: sfy@123@active
suagger-package: com.sfy.mqtt.controller
suagger-title: 通用
suagger-description: 通用接口文档说明
suagger-version: all
feign-url: http://192.168.1.23:18899
rabbitmq-host: 192.168.1.33
rabbitmq-port: 5672
rabbitmq-username: admin
rabbitmq-password: sfydev123
rabbitmq-virtualHost: sfy
tx-manager-url: http://192.168.1.23:18899/tx-manager/tx/manager/getServer
compensate-db-dbType: mysql
mqtt-username: admin
mqtt-password: sfydev123
mqtt-hostUrl: tcp://192.168.1.23:1883
mqtt-clientId: sfyClientId_${random.value}
mqtt-defaultTopic: deviceUp
mqtt-connectionTimeout: 10000
mqtt-keepAliveInterval: 50
elasticsearch-cluster-name: my-application
elasticsearch-cluster-nodes: 192.168.1.33
elasticsearch-port: 9300
elasticsearch-pool: 5

eureka:
  client:
    service-url:
      defaultZone: ${eureka-server}/eureka/
spring:
  data:
    elasticsearch:
      cluster-name: ${elasticsearch-cluster-name}
      cluster-nodes: ${elasticsearch-cluster-nodes}
      port: ${elasticsearch-port}
      pool: ${elasticsearch-pool}
  rabbitmq: #RabbitMQ相关的配置
    host: ${rabbitmq-host}
    port: ${rabbitmq-port}
    username: ${rabbitmq-username}
    password: ${rabbitmq-password}
    virtualHost: ${rabbitmq-virtualHost}
  jackson:
    #date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    serialization:
      write-dates-as-timestamps: true  # 时间类型，返回时间戳
com:
  sfy:
    mqtt: #自定义的属性和值
      username: ${mqtt-username}
      password: ${mqtt-password}
      hostUrl: ${mqtt-hostUrl}
      clientId: ${mqtt-clientId}
      defaultTopic: ${mqtt-defaultTopic}
      connectionTimeout: ${mqtt-connectionTimeout}
      keepAliveInterval: ${mqtt-keepAliveInterval}

#my-config: #自定义的属性和值
#  Package: com.sfy.mqtt.controller
#  title: 社区信息
#  description: 社区信息接口文档说明
#  version: all
#  redisPort: 6379
#  redisIp: 192.168.1.33
#  redisPassword: sfydev123


#eureka:
#  client:
#    service-url:
#      defaultZone: ${eureka-server}/eureka/
#  instance:
#    preferIpAddress: true
#    hostname: ${spring.cloud.client.ipAddress}
#    instanceId: ${spring.cloud.client.ipAddress}:${server.port}
#    metadata-map:
#      user.name: ${security-name}
#      user.password: ${security-password}

#spring:
#  datasource:
#    username: ${spring-datasource-username}
#    password: ${spring-datasource-password}
#    driver-class-name: com.mysql.jdbc.Driver
#    url: ${spring-datasource-url}
#  redis:
#    #    database:  #Redis数据库索引（默认为0）
#    host: ${spring-redis-host}
#    port: ${spring-redis-port}
#    password: ${spring-redis-password}
#    timeout: ${spring-redis-timeout}
#  rabbitmq: #RabbitMQ相关的配置
#    host: ${rabbitmq-host}
#    port: ${rabbitmq-port}
#    username: ${rabbitmq-username}
#    password: ${rabbitmq-password}
#    virtualHost: ${rabbitmq-virtualHost}

feign:
  hystrix:
    enabled: true

#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          strategy: SEMAPHORE
#          thread:
#            timeoutInMilliseconds: ${hystrix-timeoutInMilliseconds}

hystrix:
  shareSecurityContext: true
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: ${hystrix-timeoutInMilliseconds}


Myconfig: #自定义的属性和值
  Package: ${suagger-package}
  title: ${suagger-title}
  description: ${suagger-description}
  version: ${suagger-version}
  redisPort: ${spring-redis-port}
  redisIp: ${spring-redis-host}
  redisPassword: ${spring-redis-password}
  feignUrl: ${feign-url}

management:
  security:
    enabled: false
  
#security:
#  oauth2:
#    resource:
#      filter-order: 3
#      token-info-uri: ${security-server}/uaa/oauth/check_token
#    client:
#      client-id: clientId
#      client-secret: secretId
#      user-authorization-uri: ${security-server}/uaa/oauth/authorize
#      access-token-uri: ${security-server}/uaa/oauth/token
#  user:
#    name: ${security-name}
#    password: ${security-password}

#mybatis-plus:
#  mapper-locations: classpath*:/mapper/**/*.xml
#  type-aliases-package: com.sfy.demo.entity